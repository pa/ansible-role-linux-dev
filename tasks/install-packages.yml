---
- name: Install apt packages
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
    update_cache: true
  with_items: "{{ install_apt_packages }}"

- name: Install pip packages
  ansible.builtin.pip:
    name: "{{ item }}"
  with_items: "{{ install_pip_packages }}"

- name: Add GPG Keys
  apt_key:
    url: "{{ item }}"
    state: present
  with_items: "{{ install_using_repository.gpg_keys }}"

- name: Add apt repositories
  apt_repository:
    repo: "deb {{ item }}"
    state: present
  with_items: "{{ install_using_repository.repo_urls }}"

- name: Install using apt repositiries
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
    update_cache: true
  with_items: "{{ install_using_repository.package_names }}"

- name: Install package using shell
  ansible.builtin.shell:
    cmd: "{{ item }}"
  with_items: "{{ install_using_shell }}"
  failed_when: false
  changed_when: false

- name: Download from source to build
  ansible.builtin.git:
    repo: "{{ item.value.url }}"
    dest: "~/{{ create_dev_dirs.2 }}/{{ item.key }}"
    force: true
  with_dict: "{{ install_from_source }}"
  register: git_module_output

- name: Install package from source
  command: "{{ item.0.commands }}"
  args:
    chdir: "{{ item.1.invocation.module_args.dest }}{{ item.0.chdir }}"
  with_nested:
    - "{{ install_from_source.values() }}"
    - "{{ git_module_output.results }}"
  failed_when: false
  changed_when: false
